/**
* This File is Generated From Legora Application
* Legora is an Generator Application To Build Ready, Configured Applications Via Desktop Applications, Website Online Generator, CLI
* Legora Website : https://legora.me
*/

buildscript {

    ext {
        kotlin_version = '1.6.0'
    }

    ext.PluginsVersions = [
        "GradlePluginV"        : "4.2.0-alpha16",
        "KotlinPluginV"        : "1.6.0",
        "EasyLauncherPluginV"  : "1.3.1",
        "FirebasePluginV"      : "4.3.1",
        "KtlintPluginV"        : "2.1.1",
        "NavigationPluginV"    : "2.5.0-alpha01",
        "HiltPluginV"          : "2.38.1",
        "FirebaseCrashlyticsV" : "2.4.1"
    ]

    repositories {
        google()
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url 'https://jitpack.io' }
    }

    dependencies {
        classpath "com.android.tools.build:gradle:${rootProject.ext.PluginsVersions.GradlePluginV}"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${rootProject.ext.PluginsVersions.KotlinPluginV}"
        classpath "com.akaita.android:easylauncher:${rootProject.ext.PluginsVersions.EasyLauncherPluginV}"
        classpath "com.google.gms:google-services:${rootProject.ext.PluginsVersions.FirebasePluginV}"
        classpath "org.jmailen.gradle:kotlinter-gradle:${rootProject.ext.PluginsVersions.KtlintPluginV}"
        classpath "androidx.navigation:navigation-safe-args-gradle-plugin:${rootProject.ext.PluginsVersions.NavigationPluginV}"
        classpath "com.google.dagger:hilt-android-gradle-plugin:${rootProject.ext.PluginsVersions.HiltPluginV}"
        classpath "com.google.firebase:firebase-crashlytics-gradle:${rootProject.ext.PluginsVersions.FirebaseCrashlyticsV}"
    }

}

apply from: "Libraries.gradle"
apply from: "AppDetails.gradle"

gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xmaxerrs" << "500"
    }
}

void daggerConfig(configuration) {
    def DependenciesInjection = rootProject.ext.DependenciesInjection
    configuration.implementation DependenciesInjection.Dagger
    configuration.kapt DependenciesInjection.DaggerCompiler
    configuration.implementation DependenciesInjection.DaggerAndroid
    configuration.implementation DependenciesInjection.Hilt
    configuration.implementation DependenciesInjection.DaggerAndroidSupport
    configuration.kapt DependenciesInjection.DaggerAndroidProcessor
    configuration.kapt DependenciesInjection.HiltCompiler
}

void defaultTestingConfiguration(configuration) {
    def TestingConfiguration = rootProject.ext.TestingConfiguration
    configuration.testImplementation TestingConfiguration.Junit
    configuration.androidTestImplementation TestingConfiguration.Esspresso
    configuration.androidTestImplementation TestingConfiguration.Runner
}

void lifeCycleConfiguration(configuration) {
    def LifeCycleConfiguration = rootProject.ext.LifeCycleConfiguration
    configuration.implementation LifeCycleConfiguration.LifecycleViewModel
    configuration.implementation LifeCycleConfiguration.LifecycleExtensions
    configuration.implementation LifeCycleConfiguration.LifecycleRuntime
    configuration.implementation LifeCycleConfiguration.LifecycleLiveData
    configuration.implementation LifeCycleConfiguration.LifecycleCommon
    configuration.implementation LifeCycleConfiguration.LifeCycleSavedState
}
